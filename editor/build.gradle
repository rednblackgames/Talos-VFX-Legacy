buildscript {
    repositories {
        mavenCentral()
    }
}

dependencies {
    api project(":runtimes:talos-libgdx")
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-lwjgl3-angle:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
    implementation "info.debatty:java-string-similarity:1.2.1"
    implementation "com.esotericsoftware.spine:spine-libgdx:$spineVersion"
    implementation "org.yaml:snakeyaml:1.21"
    implementation 'com.sparkjava:spark-core:2.9.4'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation "ch.qos.logback:logback-core:1.2.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    //Override LWJGL3 version
    implementation "org.lwjgl:lwjgl:$lwjgl3Version"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-linux"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-linux-arm32"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-linux-arm64"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-macos"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-macos-arm64"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-windows"
    implementation "org.lwjgl:lwjgl:$lwjgl3Version:natives-windows-x86"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-linux"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-linux-arm32"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-linux-arm64"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-macos"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-macos-arm64"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-windows"
    implementation "org.lwjgl:lwjgl-glfw:$lwjgl3Version:natives-windows-x86"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-linux"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-linux-arm32"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-linux-arm64"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-macos"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-macos-arm64"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-windows"
    implementation "org.lwjgl:lwjgl-jemalloc:$lwjgl3Version:natives-windows-x86"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-linux"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-linux-arm32"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-linux-arm64"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-macos"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-macos-arm64"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-windows"
    implementation "org.lwjgl:lwjgl-opengl:$lwjgl3Version:natives-windows-x86"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-linux"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-linux-arm32"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-linux-arm64"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-macos"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-macos-arm64"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-windows"
    implementation "org.lwjgl:lwjgl-openal:$lwjgl3Version:natives-windows-x86"
}

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]

sourceSets.main.resources.srcDirs = ["assets"]

project.ext.mainClassName = "com.talosvfx.talos.TalosLauncher"
project.ext.assetsDir = new File("assets")


task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (System.properties['os.name'].toLowerCase().contains('mac')) {
        jvmArgs = ["-XstartOnFirstThread"]
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true

    if (System.properties['os.name'].toLowerCase().contains('mac')) {
        jvmArgs = ["-XstartOnFirstThread"]
    }
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

task genBuildFile () {
    doFirst {

        def file = rootProject.file("editor/assets/talos-version.properties");
        Properties properties = new Properties();
        if (file.exists()) {
            properties.load(file.newReader());
        }
        properties.setProperty("version", project.version);
        properties.setProperty("buildHash", getGitHash());
        properties.setProperty("buildTime", System.currentTimeMillis() + "");

        properties.store(file.newPrintWriter(), "");
    }
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

task distLegacyTest(type: Jar) {
    manifest {
        attributes 'Main-Class': "com.talosvfx.talos.test.LegacyCompareTest"
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dist.dependsOn classes

